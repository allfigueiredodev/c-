1) Transform the Form class into a Abstract class renaming it as AForm,
	all attributes should be kept as private, AForm now will be a base
	class for other three derived classes; √
2) Add the following concrete classes:√
	• ShrubberyCreationForm: Required grades: sign 145, exec 137
	Create a file <target>_shrubbery in the working directory, and writes ASCII trees
	inside it.

	• RobotomyRequestForm: Required grades: sign 72, exec 45 √
	Makes some drilling noises. Then, informs that <target> has been robotomized
	successfully 50% of the time. Otherwise, informs that the robotomy failed.

	• PresidentialPardonForm: Required grades: sign 25, exec 5 √
	Informs that <target> has been pardoned by Zaphod Beeblebrox.

	All of them take only one parameter in their constructor: the target of the form. For
	example, "home" if you want to plant shrubbery at home.
3) Add the execute(Bureaucrat const & executor) const member function to √
the base form and implement a function to execute the form’s action of the concrete
classes.
4) add the executeForm(AForm const & form) √
member function to the Bureaucrat. It must attempt to execute the form. If it’s successful, print something like:
<bureaucrat> executed <form>
If not, print an explicit error message.
Implement and turn in some tests to ensure everything works as expected.
